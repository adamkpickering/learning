{
  "name": "golang",
  "version": 0,
  "active": true,
  "cards": [
    {
      "id": "or5yiju008",
      "version": 0,
      "active": true,
      "question": "declare an array of four strings",
      "answer": "var x [4]string",
      "reviews": [
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-03T22:39:08.977829133Z"
        },
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-04-26T23:16:55.150236654Z"
        }
      ]
    },
    {
      "id": "pvsjmkyrxy",
      "version": 0,
      "active": true,
      "question": "What are the three rules of defer?",
      "answer": "1) a deferred functions arguments are evaluated when the defer statement is evaluated\n2) deferred function calls are executed in last in first out order after the surrounding function returns\n3) deferred functions may read and assign to the returning function's named return values",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T22:59:44.950275821Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:40:02.618039367Z"
        },
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-04-26T23:23:42.089727206Z"
        }
      ]
    },
    {
      "id": "75ugyu0iyp",
      "version": 0,
      "active": true,
      "question": "Define the fmt.Stringer interface.",
      "answer": "type Stringer interface {\n    String() string\n}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:40:40.488634528Z"
        },
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-04-26T23:24:21.232535918Z"
        }
      ]
    },
    {
      "id": "1nefkc3bzo",
      "version": 0,
      "active": true,
      "question": "Define error.",
      "answer": "type error interface {\n    Error() string\n}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:41:10.266174066Z"
        },
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-04-26T23:24:53.977863423Z"
        }
      ]
    },
    {
      "id": "mg4okn60t4",
      "version": 0,
      "active": true,
      "question": "What is the syntax of a closure?",
      "answer": "func(i int, f float) int {\n    statements\n}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:00:06.753675575Z"
        },
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-03T22:41:53.598862834Z"
        }
      ]
    },
    {
      "id": "a7txpxz2df",
      "version": 0,
      "active": true,
      "question": "Define io.Reader.",
      "answer": "type io.Reader interface {\n    Read(b []byte) (int, error)\n}",
      "reviews": [
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-09T23:00:38.276064579Z"
        },
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-03T22:42:37.170571086Z"
        }
      ]
    },
    {
      "id": "ivze8dnu8s",
      "version": 0,
      "active": true,
      "question": "What is an interface, under the hood?",
      "answer": "a tuple: (value, type)",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:00:52.378579766Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:42:57.970899336Z"
        }
      ]
    },
    {
      "id": "arc6hd8luo",
      "version": 0,
      "active": true,
      "question": "What is the empty interface?",
      "answer": "an interface that has no methods; you can assign any type to an empty interface",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:01:10.527775607Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:43:25.005354115Z"
        }
      ]
    },
    {
      "id": "bij6jj2rfk",
      "version": 0,
      "active": true,
      "question": "What happens if you call a method on a nil interface?",
      "answer": "you get a runtime error",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:01:22.038824736Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:43:32.974562164Z"
        }
      ]
    },
    {
      "id": "te6f1zz2s1",
      "version": 0,
      "active": false,
      "question": "{-, F, S}print{-, f, ln}",
      "answer": "beginning: - - to io.Stdout F - to io.Writer interface passed as argument S - to string passed as argument end: - - simply print arguments without spaces (unless two consecutive are not strings) or newline f - print according to format string ln - print with newline and spaces between args",
      "reviews": []
    },
    {
      "id": "6b9knatx4c",
      "version": 0,
      "active": false,
      "question": "What group of functions are pretty much useless? Why?",
      "answer": "The fmt.*scan* functions. They break input up based on spaces which is highly opinionated and not very useful.",
      "reviews": []
    },
    {
      "id": "b5604ol5gl",
      "version": 0,
      "active": true,
      "question": "What is the signature of the function that is used to copy elements from one slice to another?",
      "answer": "func copy(dst, src []Type) int",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:01:58.460496552Z"
        },
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-03T22:44:28.661458291Z"
        }
      ]
    },
    {
      "id": "1cdlwrkcih",
      "version": 0,
      "active": true,
      "question": "What is weird about this function:\n\nfunc hello() (n int) {\n    n = 4\nreturn\n}",
      "answer": "The return value also acts as a variable declaration.",
      "reviews": [
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-09T23:02:22.52578598Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:45:01.945930978Z"
        }
      ]
    },
    {
      "id": "fmdb00fvqx",
      "version": 0,
      "active": false,
      "question": "What are the four types in the bufio package?\nWhat are they for?",
      "answer": "func NewReader(rd io.Reader) *Reader\nfunc NewWriter(wr io.Writer) *Writer\nfunc NewReadWriter(rw io.ReadWriter) *ReadWriter\nfunc NewScanner(rd io.Reader) *Scanner",
      "reviews": []
    },
    {
      "id": "vhwd8vef06",
      "version": 0,
      "active": true,
      "question": "How do you get command line args?\nWhat is the type of this variable?",
      "answer": "os.Args\n[]string",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:02:57.50134281Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:46:14.093029912Z"
        }
      ]
    },
    {
      "id": "bh2xvx5hrq",
      "version": 0,
      "active": true,
      "question": "What stdlib package is used to convert strings to other types?",
      "answer": "strconv",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:03:11.49692834Z"
        },
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-03T22:46:24.137932355Z"
        }
      ]
    },
    {
      "id": "bh2xvx5hgq",
      "version": 0,
      "active": false,
      "question": "function signature to convert string to float",
      "answer": "func strconv.ParseFloat(str string, bits int) (float64, error)",
      "reviews": []
    },
    {
      "id": "yjuqpzp01w",
      "version": 0,
      "active": false,
      "question": "function signature to convert string to int",
      "answer": "func strconv.ParseInt(str string, base int, bits int) (int64, error)",
      "reviews": []
    },
    {
      "id": "ukz94zsw4q",
      "version": 0,
      "active": false,
      "question": "function signature to convert string to uint",
      "answer": "func strconv.ParseUint(s string, base, bits int) (uint64, error)",
      "reviews": []
    },
    {
      "id": "0m3p4hstjd",
      "version": 0,
      "active": true,
      "question": "What are the two ways to create the multi-line string:\n\nhello\nbye",
      "answer": "s := \"hello\\n\" +\n\"bye\"\n\ns := `hello\nbye`",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:03:47.202072971Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:46:55.215933564Z"
        }
      ]
    },
    {
      "id": "y0n53klwxs",
      "version": 0,
      "active": false,
      "question": "What is the difference between os.Exit and panic?",
      "answer": "os.Exit *only* exits with an exit code; panic is involved with unwinding the stack, calling deferred functions, potentially being caught by recover etc",
      "reviews": []
    },
    {
      "id": "r3v7wk6n4j",
      "version": 0,
      "active": true,
      "question": "When should panic be used, and when should an error be returned?",
      "answer": "Panic is used *only* when the program has reached an unrecoverable state.\nReturning an error is done everywhere else.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:04:09.433457233Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:47:16.758140916Z"
        }
      ]
    },
    {
      "id": "2ovxfkh5a7",
      "version": 0,
      "active": false,
      "question": "type Vertex struct {\nX int\nY int\n}\n\nWhat are the three ways to create an instance of Vertex?",
      "answer": "Vertex{1, 2} Vertex{X: 1, Y: 2} Vertex{} Vertex{     X: 1,     Y: 2, }",
      "reviews": []
    },
    {
      "id": "ipx7dt47nq",
      "version": 0,
      "active": false,
      "question": "Are semicolons necessary in Go?",
      "answer": "In most cases no; the lexer inserts semicolons in places that need them. However, you can use semicolons to separate multiple statements on the same line",
      "reviews": []
    },
    {
      "id": "d0y9r4ywjj",
      "version": 0,
      "active": true,
      "question": "How do type switches work?\nWhat is the syntax?",
      "answer": "Type switches are a special construct. Don't try to understand\nthem by comparing them to other types of switch-case.\nThe syntax is as follows:\nswitch v := i.(type) {\ncase bool:\n    // v is of type bool\ncase int:\n    // v is of type int\ncase *int:\n    // v is of type *int\ndefault:\n    // v has the same type as i\n}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:04:47.780094999Z"
        },
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-03T22:49:26.779219339Z"
        }
      ]
    },
    {
      "id": "05sw99ypya",
      "version": 0,
      "active": false,
      "question": "What is the function that is used to open a file",
      "answer": "func os.Open(path string) (*os.File, error)",
      "reviews": []
    },
    {
      "id": "aa12kvyf4u",
      "version": 0,
      "active": true,
      "question": "What is the signature of the function used to add elements to the end of a slice?\nHow would you use it?",
      "answer": "func append(slice []Type, elems ...Type) []Type\n\nslice = append(slice, elem1, elem2)\n\nIt is important to assign the result of append to the variable\nthat you are appending to. This is because the slice will be\nreallocated if it does not have the capacity for the new elements.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:05:32.544941985Z"
        },
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-03T22:50:26.772060777Z"
        }
      ]
    },
    {
      "id": "d5tm1x134u",
      "version": 0,
      "active": true,
      "question": "What does ... mean? What is it called?",
      "answer": "It makes a parameter into a \"variadic parameter\". It\nprovides a slice of the noted type under the parameter name.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:05:45.583109427Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:50:46.228855535Z"
        }
      ]
    },
    {
      "id": "yisk5ab08a",
      "version": 0,
      "active": false,
      "question": "What is the signature of the function used to encode data into JSON?",
      "answer": "func json.Marshal(v interface{}) ([]byte, error)",
      "reviews": []
    },
    {
      "id": "tjygy81e5l",
      "version": 0,
      "active": false,
      "question": "de-encode json data function signature",
      "answer": "func json.Unmarshal(data []byte, v interface{}) error",
      "reviews": []
    },
    {
      "id": "0rbgnp6wnt",
      "version": 0,
      "active": true,
      "question": "When unmarshaling arbitrary JSON, what type is a JSON number translated to?",
      "answer": "float64",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:05:51.519974261Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:50:55.031899078Z"
        }
      ]
    },
    {
      "id": "tmug7gm7sk",
      "version": 0,
      "active": true,
      "question": "Can the type of a variable change?",
      "answer": "No.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:06:02.168372756Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:51:02.317860325Z"
        }
      ]
    },
    {
      "id": "210ep38qvx",
      "version": 0,
      "active": true,
      "question": "What are the two types of type assertion?\nHow does each behave?",
      "answer": "var i interface{} = int(4)\n\nx := i.(int) // panics if i is not of type int\n\ny, ok := i.(float) // lets you check ok before using y",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:07:17.542629144Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:51:51.72948988Z"
        }
      ]
    },
    {
      "id": "i05tr7reeu",
      "version": 0,
      "active": true,
      "question": "How do you exit a program with exit code 1?",
      "answer": "os.Exit(1)",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:07:28.723657607Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:52:34.25901417Z"
        }
      ]
    },
    {
      "id": "88g0rd5b2y",
      "version": 0,
      "active": false,
      "question": "four ways to define a zeroed struct",
      "answer": "var a MyStruct var a = MyStruct{} a := MyStruct{} a := *new(MyStruct)",
      "reviews": []
    },
    {
      "id": "nh4e4j12ua",
      "version": 0,
      "active": true,
      "question": "Why does new() exist?",
      "answer": "It was there before \u0026MyStruct{}. It is superfluous.",
      "reviews": [
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-09T23:07:35.235880687Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:52:42.879120195Z"
        }
      ]
    },
    {
      "id": "euduicull6",
      "version": 0,
      "active": true,
      "question": "What are the differences between defining variables with var and defining variables with := ?",
      "answer": "- only var can be used when not in a block\n- only := can be used to do multiple return",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:08:23.95249284Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:53:16.774000429Z"
        }
      ]
    },
    {
      "id": "h2qb15f9up",
      "version": 0,
      "active": true,
      "question": "Create a channel that sends/receives type MyStruct with a buffer size of 20.",
      "answer": "ch := make(chan MyStruct, 20)",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:46:49.7036415Z"
        },
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-09T23:08:43.801833508Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:55:03.146641763Z"
        }
      ]
    },
    {
      "id": "m7yr4rt780",
      "version": 0,
      "active": true,
      "question": "How do you close a channel?\nWhat rule applies?",
      "answer": "close(ch)\n\nThis must always be done from the sender",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:09:06.50398801Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:55:41.375941356Z"
        }
      ]
    },
    {
      "id": "ut1srvdlok",
      "version": 0,
      "active": true,
      "question": "val, ok := \u003c-my_chan\n\nWhat are the two possible values of ok?\nWhat do they signify?",
      "answer": "ok is true if we got a valid value in val.\nok is false if the channel is closed and there are no more values to receive.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:09:51.855796393Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:56:14.970562552Z"
        }
      ]
    },
    {
      "id": "7wnv3qfx2s",
      "version": 0,
      "active": true,
      "question": "Write code to sleep for 4 seconds.",
      "answer": "time.Sleep(4 * time.Second)",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:10:10.366505906Z"
        },
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-03T22:56:44.48414005Z"
        }
      ]
    },
    {
      "id": "e2rtk1zu43",
      "version": 0,
      "active": true,
      "question": "How do you select from channels ch1 and ch2?",
      "answer": "select {\ncase a, ok := \u003c-ch1:\n    fmt.Println(a)\ncase a, ok := \u003c-ch2:\n    fmt.Println(a)\n}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:47:32.0561874Z"
        },
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-09T23:10:52.539357363Z"
        },
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-03T22:57:25.447817242Z"
        }
      ]
    },
    {
      "id": "elok53244e",
      "version": 0,
      "active": true,
      "question": "Define a map with string keys and integer values.",
      "answer": "a := map[string]int{\n    \"hello\": 4,\n    \"world\": 5,\n}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:11:27.107397422Z"
        },
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-03T22:57:51.737626056Z"
        }
      ]
    },
    {
      "id": "wwzwl0g5p3",
      "version": 0,
      "active": true,
      "question": "Retrieve a value from a map while checking if the key exists.",
      "answer": "a, ok := my_map[key]\nif ok {...}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:12:09.811259211Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:58:15.064044222Z"
        }
      ]
    },
    {
      "id": "88ig9u8dvw",
      "version": 0,
      "active": false,
      "question": "Insert or update a value in a map.",
      "answer": "my_map[key] = my_var",
      "reviews": []
    },
    {
      "id": "5q4c155o92",
      "version": 0,
      "active": true,
      "question": "How do you remove a key-value pair from a map?",
      "answer": "delete(my_map, key)",
      "reviews": [
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-09T23:12:21.719385442Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:58:45.24102105Z"
        }
      ]
    },
    {
      "id": "mqijjskkvd",
      "version": 0,
      "active": true,
      "question": "Define the time.Duration type.\nWhat does this number represent?",
      "answer": "type time.Duration int64\n\nnanoseconds",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:47:45.0738481Z"
        },
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-09T23:12:49.983652594Z"
        },
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-03T22:59:12.154104422Z"
        }
      ]
    },
    {
      "id": "1cqcarq5w6",
      "version": 0,
      "active": true,
      "question": "Define io.EOF.",
      "answer": "var io.EOF = errors.New(\"EOF\")",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:13:09.152086355Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:59:34.314725769Z"
        }
      ]
    },
    {
      "id": "ebljhnyvwi",
      "version": 0,
      "active": false,
      "question": "How do you wrap an error, while adding some text?",
      "answer": "newErr := fmt.Errorf(\"another layer: %w\", err)",
      "reviews": []
    },
    {
      "id": "112y96yd18",
      "version": 0,
      "active": true,
      "question": "How do you create a new error from scratch?",
      "answer": "err := errors.New(\"new error message\")",
      "reviews": [
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-09T23:13:26.648185387Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-03T22:59:48.074537828Z"
        }
      ]
    },
    {
      "id": "potjyp0k24",
      "version": 0,
      "active": false,
      "question": "Function signature of function that lets you get at a wrapped error? How does this work?",
      "answer": "func errors.Unwrap(err error) error   Returns the result of calling the Unwrap method on err, if its type contains an Unwrap method. Otherwise, returns nil.",
      "reviews": []
    },
    {
      "id": "irqsewsceq",
      "version": 0,
      "active": true,
      "question": "What are the 8 keywords for actions in golang templates, and what does each do?",
      "answer": "end: used as an ending for other block types\nif, else: conditionals\nrange: iteration\nwith: narrows the scope of struct down to a property for this block\nblock: combination of define and template\ndefine: defines a new, named template\ntemplate: inserts filled template here with data from passed struct",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:48:44.6993227Z"
        },
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-09T23:14:02.753757847Z"
        },
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-03T23:01:19.403588507Z"
        }
      ]
    },
    {
      "id": "syxemusjfw",
      "version": 0,
      "active": true,
      "question": "What are the three types of quotes?\nWhat is different between them?",
      "answer": "` `: raw string literal\n' ': single rune/character\n\" \": string literal with backslash escaping",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:49:20.2227533Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:14:52.818004617Z"
        }
      ]
    },
    {
      "id": "q8i2bwt0px",
      "version": 0,
      "active": true,
      "question": "What are the two steps to using a template?",
      "answer": "1) Assemble parse tree for template\n2) Execute template, passing in structure/map to be used in vars",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:50:57.7167218Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:15:23.508505048Z"
        }
      ]
    },
    {
      "id": "yh8m894wga",
      "version": 0,
      "active": true,
      "question": "For the method:\n\nfunc (t *Template) Parse(text string) (*Template, error) {...}\n\nwhy do we pass *Template rather than Template?",
      "answer": "Parse is a method that modifies the passed structure. If we pass the struct itself\nthen the function receives a copy of the struct. If that copy is modified,\nall changes to it are discarded once the function exits.\n\nIf we pass a pointer to the struct, then any modifications done to the\nstruct inside the function persist once the function exits.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:52:25.6864443Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:17:33.184312193Z"
        }
      ]
    },
    {
      "id": "n6e8v0ymr2",
      "version": 0,
      "active": true,
      "question": "For the following types, state whether the bare type is a pointer or a value.\nWhat is the rule of thumb?\n\nnumber (int, float etc)\narray\nslice\nstruct\nmap\nchannel\ninterface",
      "answer": "number (int, float etc): value\narray: value\nslice: pointer\nstruct: value\nmap: pointer\nchannel: pointer\ninterface: pointer\n\nIf it is allocated with make(), it is a pointer.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:53:49.7035889Z"
        },
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-09T23:18:45.777374717Z"
        }
      ]
    },
    {
      "id": "ocxrrx1xx0",
      "version": 0,
      "active": true,
      "question": "Send the variable myVar on ch1.",
      "answer": "ch1 \u003c- myVar",
      "reviews": [
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-10T22:54:09.3755946Z"
        }
      ]
    },
    {
      "id": "f8e8n9m2u8",
      "version": 0,
      "active": true,
      "question": "How to get a blocking select statement?\nHow do you get a nonblocking select statement?",
      "answer": "select statements are blocking by default. To make them nonblocking, include the\n\"default\" case, whose code runs when no other case\nis ready to run",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:55:02.9274242Z"
        }
      ]
    },
    {
      "id": "48s976jed4",
      "version": 0,
      "active": true,
      "question": "What is the purpose of the GOPATH env var in post-module go?\nWhat is its default value?",
      "answer": "Specifies the location into which:\n- source code is downloaded for built packages\n- binaries are installed\n- packages are built\n\ndefault: ~/go",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T22:56:39.943713Z"
        }
      ]
    },
    {
      "id": "n7971kcxtd",
      "version": 0,
      "active": false,
      "question": "[this card is out of date]What is a workspace? What are the common dirs it contains, and what does each contain?",
      "answer": "Note: legacy (GOPATH, pre-modules) concept. A workspace is a standard hierarchy that is used to develop and run go applications.   src: contains source code, *including* packages containing source code   pkg: contains binary packages   bin: contains compiled commands (packages with name main)",
      "reviews": []
    },
    {
      "id": "ghph7sagjf",
      "version": 0,
      "active": true,
      "question": "What is a go package?\nIn which two places does the name of a package appear?",
      "answer": "A package is just a directory that contains .go files.\n\nThe name of a package appears in two places:\n1) The name of the directory containing the package\n2) In the package statement at the top of each .go file in the package",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:58:13.4145222Z"
        }
      ]
    },
    {
      "id": "cs22lxzp9m",
      "version": 0,
      "active": false,
      "question": "What are the two kinds of packages?",
      "answer": "source packages and compiled packages (not unlike libraries)",
      "reviews": []
    },
    {
      "id": "bqrtznow5z",
      "version": 0,
      "active": true,
      "question": "When is module-aware mode active?",
      "answer": "Whenever a go.mod file is found in the current directory or any parent directory.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:58:57.6494443Z"
        }
      ]
    },
    {
      "id": "hslpsjplc2",
      "version": 0,
      "active": true,
      "question": "What is a go module?",
      "answer": "A collection of source packages with a go.mod at its root.\ngo.mod tracks the external dependencies, and their versions,\nthat the packages in the module depend on.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T22:59:36.5995385Z"
        }
      ]
    },
    {
      "id": "xlnzz5qm3r",
      "version": 0,
      "active": true,
      "question": "What are the three important keywords in a go.mod file?\nWhat do they mean?",
      "answer": "module: defines the module path (ex. github.com/squat/kilo)\ngo: sets the expected golang version (ex. 1.13)\nrequire: requires a module for this at a particular version or later",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:00:33.3982404Z"
        }
      ]
    },
    {
      "id": "5cbrk13di9",
      "version": 0,
      "active": false,
      "question": "pre-module: how is the following tree built?\nWhich packages and bins result, and where are they stored?\n\nsrc/foo/bar/myfile.go (package bar)\nasdf/main.go (package main)",
      "answer": "src/... pkg/ARCH/foo/bar.a (installed package object) bin/asdf (command asdf)",
      "reviews": []
    },
    {
      "id": "r6f7tduo0z",
      "version": 0,
      "active": true,
      "question": "What determines whether code in a file is turned into an installed\npackage object or an executable command?",
      "answer": "If its package is \"main\" it is turned into an executable command.\nEverything else is turned into an installed package object.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:01:36.9376291Z"
        }
      ]
    },
    {
      "id": "6psjgiqsa3",
      "version": 0,
      "active": true,
      "question": "What are the four types of import paths?\nExplain each type.",
      "answer": "standard (built-in)\nworkspace (local)\nrelative\nremote",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T23:02:23.4609455Z"
        }
      ]
    },
    {
      "id": "gpltssqhi8",
      "version": 0,
      "active": false,
      "question": "What is the difference between `go get` pre-modules vs post-modules?",
      "answer": "Pre-modules: `go get` simply downloads the package to $GOPATH/src/\u003cpackage_path\u003e,\nthen builds and installs it like any other package.\n\nPost-modules: `go get` first updates the package record in go.mod, and then\ndownloads the package (and its dependencies) to GOPATH/pkg/mod/\u003cpackage_path\u003e\nand installs the package and its dependencies to the cache.",
      "reviews": []
    },
    {
      "id": "r03ro2tf92",
      "version": 0,
      "active": true,
      "question": "type MyStruct struct {\n    Field1 int\n    Field2 string\n    Field3 float\n}\n\nAnnotate Field1 so that it is serialized to JSON as the key \"hello_world\",\nand not included if its value evaluates to false.\n\nAnnotate Field2 so that it is never included when the struct is serialized.\n\nAnnotate Field3 so that its value is converted to a string\nwhen serialized.",
      "answer": "type MyStruct struct {\n    Field1 int     `json:\"hello_world,omitempty\"`\n    Field2 string  `json:\"-\"`\n    Field3 float   `json:\",string\"`\n}",
      "reviews": [
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-10T23:04:28.1138197Z"
        }
      ]
    },
    {
      "id": "nh4grtkerd",
      "version": 0,
      "active": true,
      "question": "What is the first and only parameter to each test function?",
      "answer": "t *testing.T",
      "reviews": [
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-10T23:04:41.5054015Z"
        }
      ]
    },
    {
      "id": "eamieuvjgv",
      "version": 0,
      "active": true,
      "question": "How are tests named?",
      "answer": "func Test<functionName>(...) {...}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:05:09.1932156Z"
        }
      ]
    },
    {
      "id": "y5mh8sqkte",
      "version": 0,
      "active": true,
      "question": "How are test files named?",
      "answer": "\u003cfilename\u003e_test.go",
      "reviews": [
        {
          "version": 0,
          "result": "easy",
          "datetime": "2023-05-10T23:05:24.9471401Z"
        }
      ]
    },
    {
      "id": "d3fm7xejen",
      "version": 0,
      "active": false,
      "question": "What are the primitive methods of testing.T? What are their variations? What do they do?",
      "answer": "T.Fail{-,Now}  T.Skip{-,Now} T.Log{-,f}  T.Error{-,f}: like Fail plus Log T.Fatal{-,f}: like FailNow plus Log T.Helper: marks the calling function as a test helper function (setup etc)  T.Cleanup(func()): registers a function to be called when the test and its subtests complete",
      "reviews": []
    },
    {
      "id": "onfx28xcua",
      "version": 0,
      "active": true,
      "question": "What three important interfaces does the os.File type implement?",
      "answer": "io.Reader\nio.Writer\nio.Closer",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:05:46.3950646Z"
        }
      ]
    },
    {
      "id": "7wn8djlp4d",
      "version": 0,
      "active": false,
      "question": "File creation function signature",
      "answer": "func os.Create(path string) (*os.File, error)",
      "reviews": []
    },
    {
      "id": "8e8h1ovbix",
      "version": 0,
      "active": true,
      "question": "Define io.Writer.",
      "answer": "type io.Writer interface {\n    Write(b []byte) (int, error)\n}",
      "reviews": [
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-10T23:06:18.2095994Z"
        }
      ]
    },
    {
      "id": "ffualbgel3",
      "version": 0,
      "active": true,
      "question": "What are the two ways a package can be documented?",
      "answer": "1) Comments immediately above package statement\n2) Include a doc.go file in the package, with a package statement\n   and one big comment",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T23:08:11.3620191Z"
        }
      ]
    },
    {
      "id": "lmbyp4r2uf",
      "version": 0,
      "active": false,
      "question": "Function signature of function to start HTTP server",
      "answer": "func http.ListenAndServe(addr string, handler http.Handler) error",
      "reviews": []
    },
    {
      "id": "f0bgmdn3kf",
      "version": 0,
      "active": false,
      "question": "Define http.Handler",
      "answer": "type http.Handler interface {   ServeHTTP(rw ResponseWriter, r *Request) }",
      "reviews": []
    },
    {
      "id": "63q7gtq2s3",
      "version": 0,
      "active": false,
      "question": "Define http.ResponseWriter",
      "answer": "type http.ResponseWriter interface {   Header() http.Header   Write(b []byte) (int, error)   WriteHeader(statusCode int) }",
      "reviews": []
    },
    {
      "id": "n6zbvp4xfb",
      "version": 0,
      "active": false,
      "question": "Function signatures for four high-level functions for making HTTP requests?",
      "answer": "func http.Get(url string) (*Response, error) func http.Head(url string) (*Response, error) func http.Post(url string, cont_type string, body io.Reader) (*Response, error) func http.PostForm(url string, form url.Values) (*Response, error)",
      "reviews": []
    },
    {
      "id": "97qm2iviut",
      "version": 0,
      "active": false,
      "question": "What is the function signature of the generic method that is used to send HTTP requests?",
      "answer": "func http.Do(r *Request) (*Response, error)",
      "reviews": []
    },
    {
      "id": "khvpn5qrya",
      "version": 0,
      "active": true,
      "question": "How do you make a PUT HTTP request?",
      "answer": "1) Create a \u0026http.Client\n2) Build an http.Request struct (can use http.NewRequest)\n3) Pass it to client.Do",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T23:09:48.0753279Z"
        }
      ]
    },
    {
      "id": "n7dii3k6lf",
      "version": 0,
      "active": false,
      "question": "Function to create an http.Request, and its function signature",
      "answer": "func http.NewRequest(method, url string, body io.Reader) (*Request, error)",
      "reviews": []
    },
    {
      "id": "cd0tgz5iej",
      "version": 0,
      "active": false,
      "question": "What are the five most commonly used fields of http.Request, and what are their types?",
      "answer": "Method string URL *url.URL Header http.Header  Body io.ReadCloser PostForm url.Values",
      "reviews": []
    },
    {
      "id": "76jhc5xgpd",
      "version": 0,
      "active": false,
      "question": "Define http.Response, with only its three most used fields.",
      "answer": "type http.Response struct {    StatusCode int     Header http.Header     Body io.ReadCloser }",
      "reviews": []
    },
    {
      "id": "2o11jz6j5s",
      "version": 0,
      "active": true,
      "question": "What are the function signatures of the four methods in context.Context?\nWhen would they be used?",
      "answer": "func (c context.Context) Done() \u003c-chan struct{}\nReturns a channel that is closed when work associated with this\ncontext should be canceled.\n\nfunc (c context.Context) Deadline() (dl time.Time, ok bool)\nReturns the time when work associated with this context should be canceled;\nok is false if there is no deadline.\n\nfunc (c context.Context) Err() error\nIf context is not yet closed, returns nil; if context is closed,\nreturns error explaining why.\n\nfunc (c context.Context) Value(key interface{}) interface{}\nReturns a value associated with the context with a specific key.\n\nUseful for request-scoped data.",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T23:11:35.0677177Z"
        }
      ]
    },
    {
      "id": "clguzhyw1j",
      "version": 0,
      "active": true,
      "question": "What are the three types of channels?\nWhat do they look like in function signatures?",
      "answer": "chan T : bidirectional; can be used to send and receive T\n\u003c-chan T : can only be used to receive T\nchan\u003c- T : can only be used to send T",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:12:13.9087745Z"
        }
      ]
    },
    {
      "id": "wr23546cbz",
      "version": 0,
      "active": true,
      "question": "What is the problem with using os.Exit() to exit a program?",
      "answer": "It does not call deferred functions.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:12:25.4174885Z"
        }
      ]
    },
    {
      "id": "lkoc6665tb",
      "version": 0,
      "active": true,
      "question": "What are the two defining characteristics of a rune?",
      "answer": "1) a rune is an alias for int32\n2) a rune represents a unicode code point",
      "reviews": [
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-10T23:13:00.4689589Z"
        }
      ]
    },
    {
      "id": "v4e56eiur0",
      "version": 0,
      "active": true,
      "question": "What type is a string, behind the scenes?",
      "answer": "[]byte",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:13:14.3369101Z"
        }
      ]
    },
    {
      "id": "1l7xpbe1z3",
      "version": 0,
      "active": true,
      "question": "How does one loop over the utf-8 encoded runes in a string?",
      "answer": "for index, runeValue := range my_string {...}",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T23:13:41.4746369Z"
        }
      ]
    },
    {
      "id": "rc1fyqvc7z",
      "version": 0,
      "active": true,
      "question": "What is iota?\nHow do you use it?",
      "answer": "A way of declaring constants in a group. You can basically make enums\nif you define a special type. For example:\n\ntype KeyType int\nconst (\n    KeyEnter KeyType = iota    // 0\n    KeyEsc KeyType             // 1\n    KeyCtrl KeyType            // 2\n    KeyAlt KeyType             // 3\n)\n\nYou can also use iota as a value on each line, for example\nto create a bitmask:\n\ntype Mask int\nconst (\n    One Mask = 1 \u003c\u003c iota  // 1 \u003c\u003c 0, or 00000001\n    Two                   // 1 \u003c\u003c 1, or 00000010\n    Four                  // 1 \u003c\u003c 2, or 00000100\n    Eight                 // 1 \u003c\u003c 3, or 00001000\n    Sixteen               // 1 \u003c\u003c 4, or 00010000\n)",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:15:20.8895513Z"
        }
      ]
    },
    {
      "id": "i3e2lvhs1i",
      "version": 0,
      "active": true,
      "question": "Which statements does a `break` statement break out of?",
      "answer": "for, switch and select",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T23:15:55.0944868Z"
        }
      ]
    },
    {
      "id": "99dz0o9eb3",
      "version": 0,
      "active": false,
      "question": "Define the http.Header type",
      "answer": "type http.Header map[string][]string",
      "reviews": []
    },
    {
      "id": "86z6lbg99o",
      "version": 0,
      "active": true,
      "question": "How do you get the number of characters in a string?",
      "answer": "len([]rune(my_string))",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:16:21.9758952Z"
        }
      ]
    },
    {
      "id": "02ujikjcyy",
      "version": 0,
      "active": true,
      "question": "What are the two forms of (non-type-switch) switch statements in go?",
      "answer": "Like testing an enumeration:\n\nswitch my_var {\ncase 'a':\n    ...\ncase 'b':\n    ...\n}\n\nLike an if-else chain:\n\nswitch {\ncase expr:\n    ...\ncase expr2:\n    ...\n}",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:17:17.2975185Z"
        }
      ]
    },
    {
      "id": "csc31sgqt2",
      "version": 0,
      "active": true,
      "question": "What are the three basic (possibly overlapping) uses for a context.Context?",
      "answer": "1) Used to get goroutines to gracefully exit at the command of another goroutine\n2) Used to define and enforce a deadline\n3) Used to define higher-scoped variables that should be shared across functions, goroutines etc",
      "reviews": [
        {
          "version": 0,
          "result": "hard",
          "datetime": "2023-05-10T23:18:22.2593691Z"
        }
      ]
    },
    {
      "id": "ds3itmc0ol",
      "version": 0,
      "active": true,
      "question": "What happens in go when you attempt to use more memory but there is no more (out of memory)?\nHow do you handle this?",
      "answer": "The program crashes - there is nothing you can do about this. The way you handle this\ndepends on your application; for most server-side applications\nyou would monitor the process with a watchdog that restarts it upon crash/exit.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:19:20.0611895Z"
        }
      ]
    },
    {
      "id": "m9fq4am683",
      "version": 0,
      "active": true,
      "question": "From a high level, how is an HTTP request responded to using the standard library?\nHow would I write a server with multiple endpoints?",
      "answer": "Everything revolves around the http.Handler type. When a request is received,\nthe ServeHTTP method of the Handler is called. This method reads\nthe *Request, and uses its logic to decide how to write the ResponseWriter.\nNote that http.Handler is an interface, so it probably has some kind\nof state (request handling threads/processes) in the background.\n\nOnce the ResponseWriter is filled, the calling function can turn it into\nan HTTP response that it sends to the client.\n\nSo if you wanted to write a server with multiple endpoints, you'd put\na \"router\" in the ServeHTTP method of your Handler that dispatches\nthe request to one of several functions that handle endpoints.",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T23:22:36.944323Z"
        }
      ]
    },
    {
      "id": "cga946xb3g",
      "version": 0,
      "active": true,
      "question": "What are the two characteristics of a slice, and what functions are used to get them?",
      "answer": "Length: the number of elements in the slice. len() is used to get it.\n\nCapacity: the number of elements the slice can accomodate before it is reallocated. cap() is used to get it.",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:22:53.3541025Z"
        }
      ]
    },
    {
      "id": "gd9c0lajvs",
      "version": 0,
      "active": true,
      "question": "Create a slice of bytes that has 4 bytes initialized and can accommodate a maximum of 32 bytes.",
      "answer": "my_slice := make([]byte, 4, 32)",
      "reviews": [
        {
          "version": 0,
          "result": "normal",
          "datetime": "2023-05-10T23:23:25.4214534Z"
        }
      ]
    },
    {
      "id": "oxzjd2rvoh",
      "version": 0,
      "active": false,
      "question": "You have a base template that was defined with:\n\nbase, _ := template.New(\"base\")\n\nWhat are two ways to add a new template,\nwith name \"new_template\", to the namespace of base?",
      "answer": "Way 1:\n\nbase.Parse(\"{{ define `new_template` }}content here{{ end }}\")\n\nWay 2:\n\nnew_template := base.New(\"new_template\")\ntemplate.Must(new_template.Parse(\"content here\"))",
      "reviews": []
    },
    {
      "id": "l40gouuq1t",
      "version": 0,
      "active": false,
      "question": "What are the two ways to execute a template?\nWhat are their function signatures?",
      "answer": "func (t *Template) Execute(wr io.Writer, data interface{}) error   func (t *Template) ExecuteTemplate(wr io.Writer, name string, data interface{}) error",
      "reviews": []
    },
    {
      "id": "xiv39ys2cw",
      "version": 0,
      "active": false,
      "question": "base_tmpl := `\u003chtml\u003e{{ template \"content\" . }}\u003c/html\u003e`  base, _ := template.New(\"base\").Parse(base_tmpl)   Using `base` as a base template, define another template that does not modify `base`, but redefines the `content` template as something specific to itself.",
      "answer": "tmpl1 := template.Must(base.Clone()) template.Must(tmpl1.Parse(\"{{define `content`}}tmpl1{{end}}\"))   or   tmpl1 := template.Must(base.Clone()) template.Must(tmpl1.New(\"content\").Parse(\"tmpl1\"))",
      "reviews": []
    },
    {
      "id": "tkacy1prwj",
      "version": 0,
      "active": true,
      "question": "Use time.Ticker to print \"hello world\" every 3 seconds.",
      "answer": "ticker := time.NewTicker(3 * time.Second)\nfor {\n    <-ticker.C\n    fmt.Println(\"hello world\")\n}",
      "reviews": [
        {
          "version": 0,
          "result": "failed",
          "datetime": "2023-05-10T23:25:03.533496Z"
        }
      ]
    },
    {
      "id": "q0h1wc40st",
      "version": 0,
      "active": false,
      "question": "How does *Template.Parse() work?",
      "answer": "It parses a template. If there are any template definitions (i.e. {{define ...}} or {{block ...}} statements) in the parsed text, they are removed and added to the template namespace. If the parsed text contains only whitespace and comments, it is considered empty. Otherwise, it replaces any existing body of the template.",
      "reviews": []
    },
    {
      "id": "jrqj8w618r",
      "version": 0,
      "active": false,
      "question": "Function signature for *Template.New()",
      "answer": "func (t *Template) New(name string) *Template",
      "reviews": []
    },
    {
      "id": "2bro9p5bbv",
      "version": 0,
      "active": false,
      "question": "Function signature for *Template.Parse",
      "answer": "func (t *Template) Parse(value string) (*Template, error)",
      "reviews": []
    },
    {
      "id": "1omecav94f",
      "version": 0,
      "active": true,
      "question": "What is init()?",
      "answer": "Each package may contain multiple init() functions. These functions\nare all run when the package is imported. They run after const\nand top-level var statements are initialized. They are useful for\ninitializing any top-level data etc.",
      "reviews": []
    },
    {
      "id": "44abkiany3",
      "version": 0,
      "active": false,
      "question": "In the `flag` package, what are the two ways of declaring a flag of type int? What are their function signatures?",
      "answer": "func flag.Int(name string, default int, usage string) *int func flag.IntVar(p *int, name string, default int, usage string)",
      "reviews": []
    },
    {
      "id": "rqzb87y18t",
      "version": 0,
      "active": false,
      "question": "The flag package works for command-line flag parsing, so long as you can deal with what two annoying things?",
      "answer": "1) Usage is always reported with flags having a single dash, even if they are multiple letters.   2) Having 2+ flags for a single variable is effectively not supported - the usage message reports them as 2+ separate flags.",
      "reviews": []
    },
    {
      "id": "zstqqmljyy",
      "version": 0,
      "active": false,
      "question": "Parse two command line flags: -a (bool) and -f (string), and get a positional argument, and print them, using the stdlib flag parsing package.",
      "answer": "import (     \"flag\"     \"fmt\" )  main() {     a := flag.Bool(\"a\", false, \"usage here\")     f := flag.String(\"f\", \", \"usage here\")     flag.Parse()     pos1 := flag.Args()[1]     fmt.Println(*a, *f, pos1)  }",
      "reviews": []
    },
    {
      "id": "7qstfhce3c",
      "version": 0,
      "active": true,
      "question": "How does the Read() method work (2 points)?\nUse signature Read(p []byte) (n int, err error) to discuss.",
      "answer": "1) Reads up to len(p) bytes into p\n2) n is number of bytes of p that are valid",
      "reviews": []
    },
    {
      "id": "7bw6ko6pzw",
      "version": 0,
      "active": true,
      "question": "How does the Write() method work (2 points)?\nUse signature Write(p []byte) (n int, err error) to discuss.",
      "answer": "1) Writes len(p) bytes from p and returns n to say how many bytes were written\n2) If it writes less than len(p), err is non-nil and explains what happened",
      "reviews": []
    },
    {
      "id": "oketwc2ey8",
      "version": 0,
      "active": true,
      "question": "How do you convert a []byte, myByte, to a string?",
      "answer": "myString := string(myByte)",
      "reviews": []
    },
    {
      "id": "t7k8xhz3ag",
      "version": 0,
      "active": true,
      "question": "When is the bufio package useful?",
      "answer": "I/O operations like Read() and Write() have a fair amount of overhead (like any system call).\nBuffering your I/O can boost performance greatly by saving\nyour input/output in a buffer and then writing it all at once.",
      "reviews": []
    },
    {
      "id": "b9cqobt2h4",
      "version": 0,
      "active": true,
      "question": "What function would you use to read everything from a file?",
      "answer": "os.ReadFile",
      "reviews": []
    },
    {
      "id": "lf07ywwsuk",
      "version": 0,
      "active": true,
      "question": "What function would you use to write a []byte to a file, truncating existing contents?",
      "answer": "os.WriteFile",
      "reviews": []
    },
    {
      "id": "qzfo7uigid",
      "version": 0,
      "active": true,
      "question": "What function would you use to read everything from an io.Reader?",
      "answer": "io.ReadAll",
      "reviews": []
    },
    {
      "id": "j58w2ilfl9",
      "version": 0,
      "active": true,
      "question": "What function would you use to split a string on occurrences of another string?",
      "answer": "strings.Split",
      "reviews": []
    },
    {
      "id": "8r1ikjs6lj",
      "version": 0,
      "active": true,
      "question": "What function would you use for stripping whitespace from both ends of a string?",
      "answer": "strings.TrimSpace",
      "reviews": []
    },
    {
      "id": "0epv77shgs",
      "version": 0,
      "active": true,
      "question": "Function that joins a slice of strings on a separator string into a single string?",
      "answer": "strings.Join",
      "reviews": []
    },
    {
      "id": "2lmr2hz73v",
      "version": 0,
      "active": true,
      "question": "What is the function that is used to replace all substrings inside a string with other strings?",
      "answer": "strings.ReplaceAll",
      "reviews": []
    },
    {
      "id": "iub70sgzjx",
      "version": 0,
      "active": true,
      "question": "What is the package that should be used for working with cross-platform paths?",
      "answer": "path/filepath",
      "reviews": []
    },
    {
      "id": "bbmw004spz",
      "version": 0,
      "active": true,
      "question": "Function used to get the filename from a full path?",
      "answer": "filepath.Base",
      "reviews": []
    },
    {
      "id": "hnu691satt",
      "version": 0,
      "active": true,
      "question": "Function used to get the directory, without the filename, from a path?",
      "answer": "filepath.Dir",
      "reviews": []
    },
    {
      "id": "4bbbgxk6vy",
      "version": 0,
      "active": true,
      "question": "What is the function used to get entire path from a partial path?",
      "answer": "filepath.Abs",
      "reviews": []
    },
    {
      "id": "jyur45v0ye",
      "version": 0,
      "active": true,
      "question": "What is the function that is used to join path elements?",
      "answer": "filepath.Join",
      "reviews": []
    },
    {
      "id": "txl8szycx2",
      "version": 0,
      "active": true,
      "question": "What is the function used to separate a path into the file name and the directory name",
      "answer": "filepath.Split",
      "reviews": []
    },
    {
      "id": "pm4dt19nao",
      "version": 0,
      "active": true,
      "question": "What is the reference time when parsing times using the time package?",
      "answer": "01/02 15:04:05 -0700 MST 2006",
      "reviews": []
    },
    {
      "id": "6qnevxtm8r",
      "version": 0,
      "active": true,
      "question": "What is the function used to parse a string into time.Time",
      "answer": "time.Parse",
      "reviews": []
    },
    {
      "id": "fx4im8732a",
      "version": 0,
      "active": true,
      "question": "Define the interface that a type can define in order to populate it from a []byte containing JSON.",
      "answer": "type json.Unmarshaler interface {\n    UnmarshalJSON([]byte) error\n}",
      "reviews": []
    },
    {
      "id": "77uq8t14ay",
      "version": 0,
      "active": true,
      "question": "How do you get the value of an environment variable?",
      "answer": "value, ok := os.LookupEnv(\"MY_ENV_VAR\")",
      "reviews": []
    },
    {
      "id": "87wjnhgksd",
      "version": 0,
      "active": true,
      "question": "How do you check if a string contains another string?",
      "answer": "present := strings.Contains(\"is it inside?\", \"inside\")",
      "reviews": []
    },
    {
      "id": "obe4v1m1nc",
      "version": 0,
      "active": false,
      "question": "Function signature for using regex to see if a string matches?",
      "answer": "func regexp.MatchString(pattern, to_search string) (bool, error)",
      "reviews": []
    },
    {
      "id": "c0ntq20tg2",
      "version": 0,
      "active": true,
      "question": "What is go.sum for?",
      "answer": "go.sum contains checksums for the contents of specific versions of the dependencies listed in go.mod.\nIf someone building your code gets a checksum that differs from\nthe checksum in go.sum for a dependency, they will get an error.",
      "reviews": []
    },
    {
      "id": "dj0dqypgha",
      "version": 0,
      "active": true,
      "question": "Under what conditions are go binaries not statically linked?",
      "answer": "When a package is included that uses cgo to call C code, most notably the `net` package.\nYou can disable the use of cgo for the `net` package though.",
      "reviews": []
    },
    {
      "id": "je7itvgced",
      "version": 0,
      "active": true,
      "question": "How does the io.Reader.Read() call deal with EOF?",
      "answer": "If an EOF condition is encountered, it may return either:\n- err = io.EOF in the call in which the last bytes are read\n- err = nil in the call in which the last bytes are read and then\n  err = io.EOF in a subsequent call",
      "reviews": []
    },
    {
      "id": "buc3holo3e",
      "version": 0,
      "active": true,
      "question": "What does an \"// indirect\" comment next to a dependency mean in go.mod?",
      "answer": "It means that the dependency is not used in this module, but rather in one of\nthe module's dependencies. Thus it is a dependency of a dependency.",
      "reviews": []
    },
    {
      "id": "fknjn5u3x2",
      "version": 0,
      "active": true,
      "question": "How are go modules versioned?\nHow do you reference a package in a module with major version greater than 1?",
      "answer": "Specific versions can be specified by tagging certain refs in the\nversion control repository with the form \"vX.Y.Z\".\n\nMajor version increments are appended to the usual path,\nso if you have \"github.com/adamkpickering/mymod\" to start, you call it\n\"github.com/adamkpickering/mymod/v2\" once you go to v2. Note that the original\npath represents both v0 and v1: v0 is where breaking changes are expected,\nand v1 is the first stable major version.\n\npackage: github.com/adamkpickering/mymod/v1/package/path   See https://research.swtch.com/vgo-import for more info.",
      "reviews": []
    },
    {
      "id": "t0mdn7h9bu",
      "version": 0,
      "active": true,
      "question": "How does vendoring work with modules?",
      "answer": "You can use `go mod vendor` to create vendor/ if it does not already exist,\nand then build with `go build -mod=vendor`.",
      "reviews": []
    },
    {
      "id": "idtgpedzjq",
      "version": 0,
      "active": true,
      "question": "How do you retrieve the following versions of a module using `go get`?\n1) latest\n2) v1.6.2\n3) commit c856192\n4) the current state of branch `master`",
      "answer": "1) go get github.com/gorilla/mux@latest\n2) go get github.com/gorilla/mux@v1.6.2\n3) go get github.com/gorilla/mux@c856192\n4) go get github.com/gorilla/mux@master",
      "reviews": []
    },
    {
      "id": "u90mbshwti",
      "version": 0,
      "active": true,
      "question": "How do you import a package when you don't actually need to use it in the code?\nWhy might you do this?",
      "answer": "import (\n    _ \"github.com/asdf/mypackage\"\n)\n\nThis is done when importing the module does some thing that your code needs.\nAn example is with the sql package: we do this with drivers\nso that they can register themselves with the main sql package, and then\nwe use the driver through the main package's interface.",
      "reviews": []
    },
    {
      "id": "jkqnzp0azf",
      "version": 0,
      "active": true,
      "question": "What are the three ways to embed a static file into a go program?",
      "answer": "//go:embed hello.txt\nvar txt string // now txt contains the contents of hello.txt\n\n//go:embed hello.txt\nvar b []byte // now b contains the contents of hello.txt\n\n//go:embed image template/*\nvar content embed.FS // now b contains the contents of files in image/ and template/",
      "reviews": []
    },
    {
      "id": "7wmuragz10",
      "version": 0,
      "active": true,
      "question": "What is the simplest way to check that a file/dir exists?\nWhat about to check that a file/dir does not exist?",
      "answer": "if _, err := os.Stat(\"/path/to/whatever\"); errors.Is(err, os.ErrNotExist)\n{\n    // /path/to/whatever does not exist\n}\n\nif _, err := os.Stat(\"/path/to/whatever\"); err == nil {\n    // /path/to/whatever exists\n}",
      "reviews": []
    },
    {
      "id": "4mzydwthz2",
      "version": 0,
      "active": true,
      "question": "How do you execute a template and get the output in a string?",
      "answer": "buffer := \u0026bytes.Buffer{}\nerr := tmpl.Execute(buffer, data)\nif err != nil { ... }\nstr := buffer.String()",
      "reviews": []
    },
    {
      "id": "htfkc0g5fv",
      "version": 0,
      "active": true,
      "question": "Given a time, mytime, turn it into a string in RFC3339 format.",
      "answer": "mystr := mytime.Format(time.RFC3339)",
      "reviews": []
    },
    {
      "id": "hfjqabk6d0",
      "version": 0,
      "active": true,
      "question": "How do you get the current time in UTC?",
      "answer": "currentTime := time.Now().UTC()",
      "reviews": []
    },
    {
      "id": "78zszn8m1c",
      "version": 0,
      "active": false,
      "question": "What is the method used to round a time to the nearest value of a specific interval?",
      "answer": "func (t time.Time) Round(d time.Duration) time.Time",
      "reviews": []
    },
    {
      "id": "4cvf38t0w7",
      "version": 0,
      "active": true,
      "question": "Define fs.FileMode.\nIn practice, how can you set it?",
      "answer": "type fs.FileMode uint32\n\nFor regular files, can simply be set to 0755 or whatever.\nThis is because only the first 9 (12?) bits are used for the permission bits,\nand the other bits are set starting from the big end of the uint32.\nIf the other bits are all zero, that means it is a regular file.",
      "reviews": []
    },
    {
      "id": "pzz38s37cu",
      "version": 0,
      "active": false,
      "question": "Define fs.FileInfo (6 methods).\nWhat is the equivalent in the os package?",
      "answer": "type FileInfo interface {\n    Name() string\n    Size() int64\n    Mode() fs.FileMode\n    ModTime() time.Time\n    IsDir() bool\n    Sys() interface{}\n}\n\nEquivalent to os.FileInfo.",
      "reviews": []
    },
    {
      "id": "tkndv1z6vy",
      "version": 0,
      "active": true,
      "question": "What is the main function that is used to get info about a file?",
      "answer": "os.Stat",
      "reviews": []
    },
    {
      "id": "h0bc16blwo",
      "version": 0,
      "active": false,
      "question": "Define fs.DirEntry (4 methods). What is its equivalent in the `os` package?",
      "answer": "type fs.DirEntry interface {     Name() string     IsDir() bool     Type() fs.FileMode     Info() (fs.FileInfo, error) }   Equivalent to os.DirEntry.",
      "reviews": []
    },
    {
      "id": "69x6n53xyj",
      "version": 0,
      "active": true,
      "question": "What function is used to get info on a directory's contents?",
      "answer": "os.ReadDir",
      "reviews": []
    },
    {
      "id": "78isqr2eis",
      "version": 0,
      "active": true,
      "question": "What does the `fs` package define?\nWhat is its major limitation at the moment?",
      "answer": "Package `fs` defines interfaces that define methods that should be used\nto interface with a filesystem.\n\nIts major limitation is the absence of any kind of write functionality.",
      "reviews": []
    },
    {
      "id": "xq6pi3n7jw",
      "version": 0,
      "active": true,
      "question": "What is the difference between os.Create and os.Open?",
      "answer": "os.Create: creates or truncates the file at the named path\nos.Open: only opens the file at the named path",
      "reviews": []
    },
    {
      "id": "qa0l5x68r7",
      "version": 0,
      "active": true,
      "question": "What is the difference between a wall clock and a monotonic clock?\nIn which cases does the `time` package use each?",
      "answer": "A wall clock is subject to changes in clock synchronization\n(i.e. when NTP causes OS to update clock), whereas a monotonic clock is not.\n\nThe general rule is that the wall clock is for telling time\nand the monotonic clock is for measuring time. Any operations that\ninvolve comparisons of time.Time structs use the monotonic clocks,\nand are thus robust against wall clock resets. Otherwise, the wall clock is used.",
      "reviews": []
    },
    {
      "id": "b2ysbkjhvl",
      "version": 0,
      "active": false,
      "question": "In the future, `go get` will be used for what? And what will `go install` be used for?",
      "answer": "Currently, `go get` is used for both installation of commands, and to update dependencies in go.mod. This can cause frustration when a user wants to do only one or the other.   In the future, `go get` will be used only for downloading code and updating go.mod, and `go install` will be used only for installing commands.",
      "reviews": []
    },
    {
      "id": "3ate1cjbuw",
      "version": 0,
      "active": true,
      "question": "How do you detect the zero value of a time?",
      "answer": "myTime.IsZero()",
      "reviews": []
    },
    {
      "id": "au0vvaysmg",
      "version": 0,
      "active": false,
      "question": "How would you set a the time fields of a time.Time to zero, while keeping the date fields?",
      "answer": "func (t time.Time) Truncate(d time.Duration) time.Time",
      "reviews": []
    },
    {
      "id": "w7jyc8um5r",
      "version": 0,
      "active": true,
      "question": "How would you get the date that is exactly two days from now?",
      "answer": "mydate := time.Now().AddDate(0, 0, 2)",
      "reviews": []
    },
    {
      "id": "1aeiuqrf8l",
      "version": 0,
      "active": true,
      "question": "In the time package, why is there no time.Day Duration constant?",
      "answer": "To avoid confusion across daylight savings time zone transitions.",
      "reviews": []
    },
    {
      "id": "x9n7aem8e6",
      "version": 0,
      "active": true,
      "question": "In fmt strings, what verbs do you use to get the following:\n1) the value in the default format for that type\n2) the value in a valid go syntax representation\n3) the type of a value\n4) a decimal number\n5) the string \"true\" or \"false\" for a bool\n6) a string, as if it were being printed\n7) a quoted string\n8) the character represented by the corresponding unicode code point\n9) an error, wrapped in a fmt.Errorf call",
      "answer": "1) %v\n2) %#v\n3) %T\n4) %d\n5) %t\n6) %s\n7) %q\n8) %c\n9) %w",
      "reviews": []
    },
    {
      "id": "rh47t1yly7",
      "version": 0,
      "active": true,
      "question": "How does errors.Is differ from just doing a type assertion on an error?",
      "answer": "It checks whether the top-level error, as well as any errors it wraps,\nmatch the argument, rather than just the top-level error.",
      "reviews": []
    },
    {
      "id": "gdn4m8l5tz",
      "version": 0,
      "active": false,
      "question": "When should errors be wrapped?\nWhen should they not be wrapped?",
      "answer": "The thing to be aware of here is abstraction layers. If wrapping an error\nviolates an abstraction somehow then you shouldn't wrap it.\n\nFor example, if I were to write a filesystem implementation of the DeckSource interface, it would break the DeckSource abstraction if the implementation were to wrap errors that pertain to reading and writing files. This is because other implementations may not even have files.",
      "reviews": []
    },
    {
      "id": "shmxxakw0a",
      "version": 0,
      "active": true,
      "question": "How do you write a hexadecimal literal?",
      "answer": "0xabc109 or 0Xabc109",
      "reviews": []
    },
    {
      "id": "shmxxakw0v",
      "version": 0,
      "active": true,
      "question": "How do you write an octal literal?",
      "answer": "0755, 0o755 or 0O755",
      "reviews": []
    },
    {
      "id": "f9i6ueuq8a",
      "version": 0,
      "active": true,
      "question": "What is the difference between the || and | operators?\nWhat about the \u0026\u0026 and \u0026 operators?",
      "answer": "The single character operators are bitwise operators corresponding to\nOR and AND operations.\n\nThe double character operators are logical operators for combining\ntrue/false values.",
      "reviews": []
    },
    {
      "id": "s8savjthyy",
      "version": 0,
      "active": true,
      "question": "Which two operators are used to do bit shifting?",
      "answer": "myVar \u003c\u003c 1\n\nThe counterpart is \u003e\u003e.",
      "reviews": []
    },
    {
      "id": "o0q6gx3g4w",
      "version": 0,
      "active": true,
      "question": "If I have two ints, how do I XOR them?",
      "answer": "Use the XOR operator: ^",
      "reviews": []
    },
    {
      "id": "s5zgb86569",
      "version": 0,
      "active": true,
      "question": "When you deserialize JSON into an `interface{}`, what do the following JSON types\nget unmarshalled as (in the interface)?\n\n- boolean\n- number\n- string\n- array\n- object\n- null",
      "answer": "boolean: bool\nnumber: float64\nstring: string\narray: []interface{}\nobject: map[string]interface{}\nnull: nil",
      "reviews": []
    },
    {
      "id": "61bi3lp86c",
      "version": 0,
      "active": true,
      "question": "Define the interface that a type can implement in order to specify how\nto marshal it into JSON in []byte form.",
      "answer": "type json.Marshaler interface {\n    MarshalJSON() ([]byte, error)\n}",
      "reviews": []
    },
    {
      "id": "9qqi8iaxtw",
      "version": 0,
      "active": true,
      "question": "What is the type that you'd use to unmarshal JSON from an io.Reader?",
      "answer": "json.Decoder",
      "reviews": []
    },
    {
      "id": "ezx76exygr",
      "version": 0,
      "active": true,
      "question": "What is the type that you'd use to marshal JSON and write it to an io.Writer?",
      "answer": "json.Encoder",
      "reviews": []
    },
    {
      "id": "s96yl1apg4",
      "version": 0,
      "active": true,
      "question": "What is the easiest way turn a []byte into an io.Reader?",
      "answer": "Use bytes.NewReader().",
      "reviews": []
    },
    {
      "id": "h05u44hi3d",
      "version": 0,
      "active": true,
      "question": "What function would you use to get a random integer in the range [0, max)?",
      "answer": "rand.Intn()",
      "reviews": []
    },
    {
      "id": "upqdnu90zi",
      "version": 0,
      "active": true,
      "question": "What function would you use to get a random float32 value in the range [0, 1.0)?\nHow about for a float64?",
      "answer": "rand.Float32()\nrand.Float64()",
      "reviews": []
    },
    {
      "id": "hiag8n4lud",
      "version": 0,
      "active": true,
      "question": "What must you always do before using functions from the math/rand package?\nHow do you do this in practice?",
      "answer": "You must initialize the rng with a seed.\n\nrand.Seed(time.Now().UnixNano())\n\nNote that this must be done in init(), otherwise you can get the same \"random\" strings sometimes.",
      "reviews": []
    },
    {
      "id": "g0rg5zl3tk",
      "version": 0,
      "active": true,
      "question": "Why don't Context objects have a `Cancel` method, and why doesn't\ntheir Done() method return a two-way channel?",
      "answer": "You want cancellation signals to flow only one way: down the hierarchy.\nIf one goroutine could cancel a Context that its peers were monitoring,\nit would be a source of bugs and confusion. Restricting Contexts\nin the above ways prevents this.",
      "reviews": []
    },
    {
      "id": "hghgdicqki",
      "version": 0,
      "active": true,
      "question": "What is a root context.Context?\nWhy is it a thing?\nWhat function is used to get a root context.Context?",
      "answer": "Functions that use context.Contexts take a parent context.Context\nand use it to construct the next level in the context hierarchy.\nSo, you need to start somewhere.\nThe root context.Context fills this need. It never times out and is never cancelled.\n\ncontext.Background()",
      "reviews": []
    },
    {
      "id": "b3g0ao2lor",
      "version": 0,
      "active": true,
      "question": "What function is used to get a new, cancellable context from a parent context?",
      "answer": "context.WithCancel",
      "reviews": []
    },
    {
      "id": "8ihhdfxw66",
      "version": 0,
      "active": true,
      "question": "What function is used to get a new Context that has a deadline?",
      "answer": "context.WithTimeout",
      "reviews": []
    },
    {
      "id": "a35tzd224x",
      "version": 0,
      "active": false,
      "question": "Define context.CancelFunc",
      "answer": "type context.CancelFunc func()",
      "reviews": []
    },
    {
      "id": "qy0n4vnt5p",
      "version": 0,
      "active": false,
      "question": "What are the two errors associated with the context package?",
      "answer": "context.Canceled context.DeadlineExceeded",
      "reviews": []
    },
    {
      "id": "3d63cgp3dl",
      "version": 0,
      "active": true,
      "question": "What is an int/uint?\nHow big is each?\nHow do you find out how big each is at runtime?",
      "answer": "For a 32 bit machine, int and uint are aliases for int32 and uint32.\nFor a 64 bit machine, int and uint are aliases for int64 and uint 64.\n\nYou can find the size of an int or uint by using `bits.UintSize`.",
      "reviews": []
    },
    {
      "id": "wk8bt5o2l9",
      "version": 0,
      "active": false,
      "question": "cobra: define cobra.Command, including the most commonly used fields but leaving out anything to do with what function the command runs (there should be 5).",
      "answer": "type cobra.Command struct {     // The usage string.     Use string     // The short help string.     Short string     // The long help string.     Long string     // Validates positional arguments.     Args cobra.PositionalArgs     // The version of the CLI program.     Version string }",
      "reviews": []
    },
    {
      "id": "24xbe27ij3",
      "version": 0,
      "active": false,
      "question": "cobra: what are all of the forms of the field that takes the function in cobra.Command (10 total)? What does each do? What is the type of each?",
      "answer": "PersistentPreRun PersistentPreRunE PreRun PreRunE Run RunE PostRun PostRunE PersistentPostRun PersistentPostRunE    PreRun functions are executed before Run functions, which are executed before PostRun functions. Persistent functions are inherited by children if they do not declare their own.   *Run: func(cmd *cobra.Command, args []string) *RunE: func(cmd *cobra.Command, args []string) error",
      "reviews": []
    },
    {
      "id": "44wzv3td3v",
      "version": 0,
      "active": false,
      "question": "cobra: what is the idiomatic basic layout of a cobra application?",
      "answer": "projectDir/   cmd/     root.go     other.go     commands.go     here.go   main.go   main.go calls the command defined in root.go, and the other files in cmd.go define child commands of the one defined in root.go.",
      "reviews": []
    },
    {
      "id": "93fgtphi7e",
      "version": 0,
      "active": false,
      "question": "cobra: how do you define flags that carry over to child commands? How about ones that don't?",
      "answer": "myCmd.PersistentFlags().String(...) myCmd.Flags().String(...)   Of course, we don't have to call .String() - it can be any function from the stdlib `flag` package, or from the `pflag` package, or others.",
      "reviews": []
    },
    {
      "id": "66aynnihry",
      "version": 0,
      "active": false,
      "question": "cobra: how do you run your application if you have already defined your root command?",
      "answer": "rootCmd.Execute()",
      "reviews": []
    },
    {
      "id": "7tpg9he8md",
      "version": 0,
      "active": false,
      "question": "cobra: define the method used to register a child Command on a Command?",
      "answer": "func (c *cobra.Command) AddCommand(cmds ...*cobra.Command)",
      "reviews": []
    },
    {
      "id": "791saov6dj",
      "version": 0,
      "active": false,
      "question": "How do you declare a type constraint that will be satisfied with either an int64 or a float64?",
      "answer": "type MyConstraint interface {     int64 | float64 }",
      "reviews": []
    },
    {
      "id": "swh4fz1hvr",
      "version": 0,
      "active": false,
      "question": "What its the signature of the function used to get a connection to an SQL database?",
      "answer": "func sql.Open(driverName, dataSourceName string) (*sql.DB, error)",
      "reviews": []
    },
    {
      "id": "c6ln9vmf1k",
      "version": 0,
      "active": false,
      "question": "What is the signature of the function used to get a single row from an SQL database?",
      "answer": "func (db *sql.DB) QueryRow(query string, args ...any) *sql.Row",
      "reviews": []
    },
    {
      "id": "95mrxrhxn7",
      "version": 0,
      "active": false,
      "question": "What is the signature of the function used to retrieve rows from an SQL database?",
      "answer": "func (db *sql.DB) Query(query string, args ...any) (*sql.Rows, error)",
      "reviews": []
    },
    {
      "id": "uhgsxfsvcb",
      "version": 0,
      "active": false,
      "question": "What is the signature of the function used to execute an SQL statement on an SQL database?",
      "answer": "func (db *sql.DB) Exec(query string, args ...any) (sql.Result, error)",
      "reviews": []
    },
    {
      "id": "5rt4tay1nw",
      "version": 0,
      "active": false,
      "question": "Define sql.Row, and all of its methods (2 total).",
      "answer": "type sql.Row struct {} func (r *sql.Row) Err() error  func (r *sql.Row) Scan(dest ...any) error",
      "reviews": []
    },
    {
      "id": "pcik8ad9de",
      "version": 0,
      "active": false,
      "question": "Define sql.Rows, and its important methods (4 total).",
      "answer": "type sql.Rows struct {} func (rs *sql.Rows) Err() error func (rs *sql.Rows) Next() bool  func (rs *sql.Rows) NextResultSet() bool  func (rs *sql.Rows) Scan(dest ...any) error",
      "reviews": []
    },
    {
      "id": "k7wirh270u",
      "version": 0,
      "active": false,
      "question": "Define sql.Scanner.",
      "answer": "type sql.Scanner interface {     Scan(src any) error  }",
      "reviews": []
    },
    {
      "id": "r5s3elzbi9",
      "version": 0,
      "active": false,
      "question": "What type is used to customize the behaviour of getting a TCP connection?",
      "answer": "type Dialer struct {...}",
      "reviews": []
    },
    {
      "id": "74flqualdd",
      "version": 0,
      "active": false,
      "question": "What is the signature of the function you'd use to open a TCP connection?",
      "answer": "func net.Dial(network, address string) (net.Conn, error)",
      "reviews": []
    },
    {
      "id": "cvqotmsy90",
      "version": 0,
      "active": false,
      "question": "What is http.RoundTripper?",
      "answer": "Is an interface that represents the ability to execute a single HTTP transaction. Takes a request and returns a response and an error.",
      "reviews": []
    }
  ]
}